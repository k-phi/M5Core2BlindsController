@startuml Contracts to Component Mapping

skinparam ComponentStyle rectangle
allow_mixing

interface IBlind {
    unsigned int getId()
    void open()
    void close()
    void stop()
    void tilt()
}

interface IBlinds {
    void open(unsigned int id)
    void close(unsigned int id)
    void stop(unsigned int id)
    void tilt(unsigned int id)
}

interface IDevice {
    void connectWiFi()
    bool isWiFiConnected()
    void powerOff()
    float getBatteryLevelInPercent()
    unsigned int getBatteryWarningLevel()
}

interface IDeviceData {
    void saveBool(const char* key, bool value)
    bool loadBool(const char* key)
    bool clear()
    void close()
}

interface IEnablable {
    enable(unsigned int id)
    void disable(unsigned int id)
    bool isEnabled(unsigned int id)
}

interface ILooper {
    void loop()
}

interface IPersistable {
    void save()
}

component HMI #LightGreen
component BlindsManager #Yellow
component DeviceManager #Yellow
component DeviceDataAccess #Grey
component DeviceAccess #Grey
component BlindsAccess #Grey

HMI <|-- ILooper : implements
HMI ..> IDevice: uses
HMI ..> IEnablable: uses
HMI ..> IBlind: uses
HMI ..> ILooper: uses
BlindsManager <|-- IBlind: implements
BlindsManager <|-- IEnablable: implements
BlindsManager <|-- ILooper: implements
BlindsManager ..> IEnablable: uses
BlindsManager ..> IBlinds: uses
BlindsManager ..> ILooper: uses
DeviceManager <|-- IDevice: implements
DeviceManager ..> IDevice: uses
DeviceManager ..> IPersistable: uses
DeviceDataAccess <|-- IPersistable: implements
DeviceDataAccess <|-- IEnablable: implements
DeviceDataAccess ..> IDeviceData: uses
DeviceAccess <|-- IDevice: implements
DeviceAccess ..> IDevice: uses
BlindsAccess <|-- IBlinds: implements
BlindsAccess <|-- ILooper: implements
BlindsAccess ..> IBlind: uses
BlindsAccess ..> ILooper: uses

@enduml